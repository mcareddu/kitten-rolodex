{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["roboHashUrl","id","set","validSets","imgSet","includes","Math","floor","random","Card","name","email","className","alt","src","CardList","monsters","map","monster","SearchBox","onChange","placeholder","type","App","props","handleSearchChange","target","setState","searchField","value","console","log","state","fetch","then","res","json","this","filteredMonsters","filter","toLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qWAGMA,G,YAAc,SAACC,GAAsB,IAAlBC,EAAiB,uDAAX,OACrBC,EAAY,CAAE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UACxDC,EAASD,EAAUE,SAASH,GAAOA,EAAM,OAE7C,OADAE,EAAoB,WAAXA,EAAsB,OAASE,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EAAI,GAAKJ,EAC5E,wBAAN,OAA+BH,EAA/B,gBAAyCG,EAAzC,mBAaWK,EAVF,SAAC,GAAyB,IAAvBR,EAAsB,EAAtBA,GAAIS,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,SAASC,IAAKd,EAAYC,KACnC,6BAAMS,IACN,4BAAKC,QCHFI,EARE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAO,qBAAKJ,UAAU,YAAf,SACHI,EAASC,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAA2BA,GAAhBA,EAAQjB,UCOhBkB,G,MAXG,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,SAAiD,IAAvCC,mBAAuC,MAAzB,mBAAyB,EAClE,OACI,uBACIT,UAAU,SACVU,KAAK,SACLD,YAAaA,EACbD,SAAUA,MCuCPG,E,kDAzCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAcRC,mBAAqB,YAAiB,IAAdC,EAAa,EAAbA,OACrB,EAAKC,SACH,CAAEC,YAAaF,EAAOG,QACtB,kBAAMC,QAAQC,IAAI,kBAAmB,EAAKC,MAAMJ,iBAfnD,EAAKI,MAAQ,CACXhB,SAAU,GACVY,YAAa,IALE,E,gEASE,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAlB,GAAQ,OAAI,EAAKW,SAAS,CAACX,kB,+BAU3B,IAAD,EACyBqB,KAAKL,MAA9BhB,EADA,EACAA,SAAUY,EADV,EACUA,YACXU,EAAmBtB,EAASuB,QAChC,qBAAG7B,KAAgB8B,cAAcnC,SAASuB,EAAYY,kBAGxD,OACE,sBAAK5B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACEQ,SAAUiB,KAAKZ,mBACfJ,YAAY,mBAEd,cAAC,EAAD,CAAUL,SAAUsB,W,GArCVG,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6be3d821.chunk.js","sourcesContent":["import React from \"react\";\nimport './card.styles.css';\n\nconst roboHashUrl = (id, set = 'set4') => {\n    const validSets = [ 'set1', 'set2', 'set3', 'set4', 'set5', 'random' ];\n    let imgSet = validSets.includes(set) ? set : 'set4';\n    imgSet = imgSet === 'random' ? 'set' + (Math.floor(Math.random() * 10) % 5 + 1) : imgSet;\n    return `https://robohash.org/${id}?set=${imgSet}&size=180x180`;\n}\n\nconst Card = ({ id, name, email }) => {\n    return (\n        <div className=\"card-container\">\n            <img alt=\"avatar\" src={roboHashUrl(id)} />\n            <h2>{ name }</h2>\n            <p>{ email }</p>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport './card-list.styles.css';\nimport Card from '../card/card.component';\n\nconst CardList = ({ monsters }) => {\n    return <div className=\"card-list\">{\n        monsters.map((monster) => (\n            <Card key={monster.id} {...monster} />\n        ))\n    }</div>;\n}\n\nexport default CardList;","import React from \"react\";\nimport './search-box.styles.css';\n\nconst SearchBox = ({ onChange, placeholder = 'Search something' }) => {\n    return (\n        <input\n            className=\"search\"\n            type=\"search\"\n            placeholder={placeholder}\n            onChange={onChange}\n        />\n    );\n}\n\nexport default SearchBox;","import './App.css';\nimport { Component } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(monsters => this.setState({monsters}));\n  }\n\n  handleSearchChange = ({ target }) => {\n     this.setState(\n       { searchField: target.value },\n       () => console.log('Search updated:', this.state.searchField)\n      );\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(\n      ({ name }) => name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return(\n      <div className=\"App\">\n        <h1>Kitten Rolodex</h1>\n        <SearchBox\n          onChange={this.handleSearchChange}\n          placeholder=\"Search Kittens\"\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}